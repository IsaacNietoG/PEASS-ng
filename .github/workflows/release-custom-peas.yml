name: Build & Release linpeas CTF

on:
  push:
    tags:
      - "*"  # Ejecuta en cada tag

permissions:
  contents: write  # necesario para crear releases y subir assets

jobs:
  Build_and_release_linpeas_ctf:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      # Dependencias mínimas (como en el original)
      - name: Python deps
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install PyYAML

      # Ejecuta el build desde linpeas/ y expone PYTHONPATH para que 'builder' se resuelva
      - name: Build linpeas CTF
        working-directory: linPEAS
        env:
          PYTHONPATH: ${{ github.workspace }}/linPEAS
        run: |
          chmod +x buildCustom.sh
          ./buildCustom.sh

      - name: Check built file
        run: |
          if [ ! -f /tmp/linpeas_ctf.sh ]; then
            echo "❌ No se generó /tmp/linpeas_ctf.sh (revisa que buildCustom.sh lo cree)"
            exit 1
          fi
          file /tmp/linpeas_ctf.sh
          ls -lh /tmp/linpeas_ctf.sh

      - name: Compute checksum
        id: sums
        run: |
          sha256sum /tmp/linpeas_ctf.sh | tee sha256.txt
          echo "sha256=$(cut -d' ' -f1 sha256.txt)" >> $GITHUB_OUTPUT

      - name: Create/Update Release and Upload Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: |
            Release automática generada por GitHub Actions.

            **SHA256**: ${{ steps.sums.outputs.sha256 }}
          draft: false
          prerelease: false
          make_latest: true
          overwrite: true                 # sobreescribe asset si ya existía
          fail_on_unmatched_files: true
          files: |
            /tmp/linpeas_ctf.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

